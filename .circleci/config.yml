version: 2
jobs:
    build:
        working_directory: ~/code
        docker:
            - image: circleci/android:api-25-alpha
        environment:
            JVM_OPTS: -Xmx3200m
        steps:
            - checkout
            - restore_cache:
                key: jars-{{checksum "build.gradle"}}-{{ checksum "app/build.gradle" }}
            - run:
                name: Chmod permissions # if permission for Gradlew Dependencies fail, use this.
                command: sudo chmod +x ./gradlew
#            - run:
#                name: Download Dependencies
#                command: ./gradlew androidDependencies
            - save_cache:
                paths:
                    - ~/.gradle
                key: jars-{{checksum "build.gradle"}}-{{ checksum "app/build.gradle" }}
#            - run:
#                name: Run Tests
#                command: ./gradlew lint test
            - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
                path: app/build/reports
                destination: reports
            - run:
                name: Initial build
                command: export TERM=${TERM:-dumb} && ./gradlew clean assembleRelease --no-daemon --stacktrace
            - run:
                name: Approve license for build tools
                command: yes | $ANDROID_HOME/tools/bin/sdkmanager --licenses || if [ $? -ne '141' ]; then exit $?; fi;  #Captures SIGPIPE 141 error but still allow repeating "y" to accept all licenses
            - store_artifacts:
                path: app/build/output/apk/
                destination: apks/
            - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
                path: app/build/test-results
            # See https://circleci.com/doc/2.0/deployment-integrations/ for deploy examples
#            - deploy:
#                name: "Deploy"
#                command: echo "Branch: ${CIRCLE_BRANCH} , PR: ${CIRCLE_PULL_REQUEST}"
#                    if [ "${CIRCLE_BRANCH}" == "develop" -o "${CIRCLE_PULL_REQUEST}" != "" ]; then
#                        ./gradlew crashlyticsUploadDistributionDevelopmentRelease --stacktrace --debug --no-daemon
#                    fi
#                    release=$(cut -c-7 <<< "${CIRCLE_BRANCH}")
#                    if [ "$release" == "release"]; then
#                        ./gradlew crashlyticsUploadDistributionProductionRelease --stacktrace --debug --no-daemon
#                    fi
